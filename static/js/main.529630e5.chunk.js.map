{"version":3,"sources":["redux/actions/types.js","redux/reducer/user_reducer.js","redux/reducer/root_reducer.js","redux/actions/user_action.js","components/style/color.js","components/style/mainStyle.js","components/pages/MainPage/FriendPanel/FriendHeader.js","components/pages/MainPage/FriendPanel/MyDetail.js","components/pages/MainPage/FriendPanel/MyProfile.js","components/pages/MainPage/FriendPanel/FriendDetail.js","components/pages/MainPage/FriendPanel/Friend.js","components/pages/MainPage/FriendPanel/FriendList.js","components/pages/MainPage/FriendPanel.js","components/pages/MainPage/ChatPanel/ChatHeader.js","components/pages/MainPage/ChatPanel/Chat.js","components/pages/MainPage/ChatPanel/ChatList.js","components/pages/MainPage/ChatPanel.js","components/pages/MainPage/MorePanel/MoreHeader.js","components/pages/MainPage/MorePanel.js","components/style/tabStyle.js","components/pages/MainPage/TabPanel.js","components/pages/MainPage.js","components/style/authStyle.js","components/pages/LoginPage.js","firebase.js","components/pages/RegisterPage.js","components/style/chatStyle.js","components/pages/ChatPage/ChatHeader.js","components/pages/ChatPage/Message.js","components/pages/ChatPage/ChatBody.js","components/pages/ChatPage/ChatInput.js","components/pages/ChatPage.js","components/style/loaderStyle.js","components/pages/LoadingPage.js","App.js","reportWebVitals.js","index.js"],"names":["SET_USER","CLEAR_USER","SET_PHOTO_URL","SET_STATUS_MSG","initialUserState","currentUser","isLoading","rootReducer","combineReducers","user","state","action","type","payload","photoURL","statusMsg","setUser","setStatusMsg","one","two","three","four","Wrapper","styled","section","Partition","div","Header","Container","Title","h2","color","Buttons","SearchBtn","RiSearchLine","AddFriendBtn","RiUserAddLine","AddChatBtn","RiChatNewLine","Input","input","ResultContainer","Result","Submit","RiAddCircleLine","List","h1","Empty","p","Item","ImageBox","props","size","TextBox","margin","h4","LastMessage","Content","Time","span","defaultProps","Detail","Form","form","h3","ContentInputBox","ContentInput","textarea","width","height","ContentInputIcon","RiPencilFill","BtnBox","GoBackBtn","RiArrowGoBackLine","SubmitBtn","RiCheckFill","ChatBtn","RiChat1Fill","FriendHeader","database","getDatabase","useState","headerMenu","setHeaderMenu","searchedFriendFromServer","setSearchedFriendFromServer","useSelector","handleHeaderMenuChange","menu","renderResult","src","image","name","onClick","e","handleAddFriend","handleSearchFriend","target","value","trim","renderSearched","handleSearchFriendFromServer","inputEmail","get","query","ref","orderByChild","equalTo","then","snapshot","val","friendInfo","Object","values","uid","keys","catch","error","console","log","update","onChange","placeholder","renderHeaderMenu","MyDetail","storage","getStorage","auth","getAuth","dispatch","useDispatch","imagePreview","setImagePreview","inputMode","setInputMode","updateStatusMsg","setUpdateStatusMsg","updateProfileImg","setUpdateProfileImg","inputStatusMsgSize","setInputStatusMsgSize","inProcess","setInProcess","useForm","defaultValues","mode","register","handleSubmit","statusMsgRef","formState","errors","useRef","inputOpenImageRef","inputTextRef","submitRef","useEffect","current","offsetWidth","offsetHeight","onSubmit","a","data","uploadBytes","storageRef","metadata","uploadTaskSnapshot","getDownloadURL","downloadURL","updateProfile","databaseRef","statusMessage","hideProfile","click","displayName","handleChangeStatusMsg","prev","focus","accept","file","files","contentType","mime","lookup","reader","FileReader","readAsDataURL","onload","result","style","display","disabled","position","bottom","right","MyProfile","showProfile","setShowProfile","FriendDetail","history","useHistory","friend","push","Friend","FriendList","friendData","length","friendArray","map","index","sort","b","renderFriends","FriendPanel","friendListRef","setFriendData","isSearching","setIsSearching","searchedFriendData","setSearchedFriendData","addFriendListener","off","updatedFriendList","onChildAdded","key","friendSet","Set","makeFriendData","friendIdArray","updatedFriendData","Promise","all","friendId","i","friendDataArray","filter","regex","RegExp","search","ChatHeader","handleSearchChat","Chat","chat","lastUpdate","content","now","Date","messageTime","timestamp","getDate","getMonth","getHours","getMinutes","renderTime","ChatList","chatData","chatArray","renderChats","ChatPanel","chatListRef","setChatData","searchedChatData","setSearchedChatData","addChatListener","onValue","makeChatData","chatIdArray","updatedChatData","chatId","getFriendInfo","getFriendIdFromChatId","substring","chatDataArray","MoreHeader","MorePanel","nav","Menu","ul","FriendIcon","IoPeopleOutline","on","ChatIcon","IoChatboxOutline","MoreIcon","IoIosMore","SignOutIcon","IoIosLogOut","TabPanel","handleTab","tab","signOut","MainPage","setTab","alert","renderMainPanel","thisTab","InputWrapper","WarningMsg","StyledLink","Link","LoginPage","errorFromSubmit","setErrorFromSubmit","loading","setLoading","signInWithEmailAndPassword","email","password","message","setTimeout","verticalAlign","marginLeft","required","pattern","minLength","to","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","RegisterPage","watch","createUserWithEmailAndPassword","createdUser","md5","set","friends","JIgPFjBwBYP5qI00Lzy3bkahkA13","textAlign","maxLength","validate","password_confirm","RiArrowLeftSLine","FriendName","SearchInputWrapper","SearchInput","Body","MessageWrapper","FriendImgBox","Message","MessageTime","InputText","RiSendPlane2Fill","searchHeader","setSearchHeader","goBack","handleSearchMessage","currentFriend","isMine","setIsMine","id","className","ChatBody","bodyEnd","scrollIntoView","messages","renderMessages","ChatInput","inputRef","sendMessage","preventDefault","ChatPage","friendUid","useParams","setCurrentFriend","setMessages","searchResults","setSearchResults","setIsLoading","dataSnapshot","chatRoomId","myUid","makeChatRoomId","addMessageListener","text","serverTimestamp","word","chatRoomMessages","reduce","acc","match","rotate","keyframes","dots","Loader","Text","LoadingPage","App","onAuthStateChanged","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","StrictMode","store","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.529630e5.chunk.js","sourcesContent":["//USER TYPES\r\nexport const SET_USER = \"set_user\";\r\nexport const CLEAR_USER = \"clear_user\";\r\nexport const SET_PHOTO_URL = \"set_photo_url\";\r\nexport const SET_STATUS_MSG = \"set_status_msg\";\r\n\r\n// //CHAT ROOM TYPES\r\n// export const SET_CURRENT_CHAT_ROOM = \"set_current_chat_room\";\r\n","import { SET_USER, CLEAR_USER, SET_PHOTO_URL, SET_STATUS_MSG } from \"../actions/types\";\r\n\r\nconst initialUserState = {\r\n  currentUser: null,\r\n  isLoading: true,\r\n};\r\n\r\nexport default function (state = initialUserState, action) {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        isLoading: false,\r\n      };\r\n    case CLEAR_USER:\r\n      return { ...state, currentUser: null, isLoading: false };\r\n    case SET_PHOTO_URL:\r\n      return {\r\n        ...state,\r\n        currentUser: { ...state.currentUser, photoURL: action.payload },\r\n      };\r\n    case SET_STATUS_MSG:\r\n      return { ...state, currentUser: { ...state.currentUser, statusMsg: action.payload } };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./user_reducer\";\r\n// import chat from \"./chat_reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  //  chat,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { SET_USER, CLEAR_USER, SET_PHOTO_URL, SET_STATUS_MSG } from \"./types\";\r\nexport function setUser(user) {\r\n  return {\r\n    type: SET_USER,\r\n    payload: user,\r\n  };\r\n}\r\nexport function clearUser() {\r\n  return {\r\n    type: CLEAR_USER,\r\n  };\r\n}\r\nexport function setPhotoURL(photoURL) {\r\n  return {\r\n    type: SET_PHOTO_URL,\r\n    payload: photoURL,\r\n  };\r\n}\r\nexport function setStatusMsg(statusMsg) {\r\n  return {\r\n    type: SET_STATUS_MSG,\r\n    payload: statusMsg,\r\n  };\r\n}\r\n","export const one = \"#233E8B\";\r\nexport const two = \"#1EAE98\";\r\nexport const three = \"#A9F1DF\";\r\nexport const four = \"#FFFFC7\";\r\n","import styled from \"styled-components\";\r\nimport * as color from \"./color\";\r\n\r\nimport {\r\n  RiSearchLine,\r\n  RiUserAddLine,\r\n  RiChatNewLine,\r\n  RiAddCircleLine,\r\n  RiPencilFill,\r\n  RiArrowGoBackLine,\r\n  RiCheckFill,\r\n  RiChat1Fill,\r\n} from \"react-icons/ri\";\r\n\r\nexport const Wrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 1.5rem;\r\n`;\r\nexport const Partition = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background: #ececec;\r\n`;\r\nexport const Header = {\r\n  Container: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 2rem 0.5rem 1rem;\r\n  `,\r\n  Title: styled.h2`\r\n    font-size: 1.5rem;\r\n    color: ${color.one};\r\n  `,\r\n  Buttons: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  `,\r\n  SearchBtn: styled(RiSearchLine)`\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    cursor: pointer;\r\n    color: ${color.one};\r\n  `,\r\n  AddFriendBtn: styled(RiUserAddLine)`\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    cursor: pointer;\r\n    color: ${color.one};\r\n  `,\r\n  AddChatBtn: styled(RiChatNewLine)`\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    cursor: pointer;\r\n    color: ${color.one};\r\n  `,\r\n  Input: styled.input`\r\n    width: 90%;\r\n    height: calc(2rem + 4px);\r\n    border-radius: 2rem;\r\n    border: 2px solid ${color.two};\r\n    padding: 0.625rem 1.25rem;\r\n    margin: 0 5% 0.5rem;\r\n    font-size: 0.75rem;\r\n  `,\r\n  ResultContainer: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n    font-size: 0.75rem;\r\n    margin-bottom: 1rem;\r\n  `,\r\n  Result: styled.div`\r\n    display: flex;\r\n    gap: 0.5rem;\r\n\r\n    div {\r\n      width: 1rem;\r\n      height: 1rem;\r\n      border-radius: 0.25rem;\r\n      overflow: hidden;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    span {\r\n      line-height: 1rem;\r\n    }\r\n  `,\r\n  Submit: styled(RiAddCircleLine)`\r\n    width: 1rem;\r\n    height: 1rem;\r\n    color: ${color.two};\r\n    cursor: pointer;\r\n  `,\r\n};\r\nexport const List = {\r\n  Container: styled.div``,\r\n  Title: styled.h1`\r\n    padding: 0.5rem;\r\n    font-size: 0.8rem;\r\n    color: #777;\r\n    text-align: left;\r\n  `,\r\n  Empty: styled.p`\r\n    padding: 0.5rem;\r\n    border-radius: 0.5rem;\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    cursor: pointer;\r\n    background-color: ${color.two};\r\n    color: #fff;\r\n  `,\r\n};\r\nexport const Item = {\r\n  Container: styled.div`\r\n    padding: 0.5rem;\r\n    border-radius: 0.5rem;\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: ${color.two};\r\n      color: #fff;\r\n    }\r\n  `,\r\n  ImageBox: styled.div`\r\n    width: ${(props) => props.size};\r\n    height: ${(props) => props.size};\r\n    border-radius: 35%;\r\n    border: 1px solid #ccc;\r\n    overflow: hidden;\r\n  `,\r\n  TextBox: styled.div`\r\n    width: calc(100% - calc(${(props) => props.margin} + 0.5rem));\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.25rem;\r\n  `,\r\n  Title: styled.h4`\r\n    font-size: 1rem;\r\n  `,\r\n  LastMessage: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `,\r\n  Content: styled.p`\r\n    overflow-x: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  `,\r\n  Time: styled.span`\r\n    color: #777;\r\n    font-size: 0.75rem;\r\n    font-weight: 200;\r\n    min-width: 3.5rem;\r\n    text-align: right;\r\n  `,\r\n};\r\nItem.ImageBox.defaultProps = {\r\n  size: \"3rem\",\r\n};\r\nItem.TextBox.defaultProps = {\r\n  margin: \"3rem\",\r\n};\r\nexport const Detail = {\r\n  Container: styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 2.5rem;\r\n    cursor: initial;\r\n    background-color: ${color.one};\r\n  `,\r\n  Form: styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 2.5rem;\r\n  `,\r\n  ImageBox: styled.div`\r\n    width: 5rem;\r\n    height: 5rem;\r\n    border: 1px solid #fff;\r\n    border-radius: 35%;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n  `,\r\n  TextBox: styled.div`\r\n    position: relative;\r\n    max-width: 320px;\r\n    padding: 0 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    color: #fff;\r\n  `,\r\n  Title: styled.h3`\r\n    font-size: 1.25rem;\r\n    font-weight: 400;\r\n  `,\r\n  Content: styled.p`\r\n    width: fit-content;\r\n    min-height: 20px;\r\n    text-align: center;\r\n    font-weight: 200;\r\n    word-break: break-word;\r\n  `,\r\n  ContentInputBox: styled.div`\r\n    min-width: 40px;\r\n    max-width: 320px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  `,\r\n  ContentInput: styled.textarea`\r\n    width: ${(props) => props.width + 16}px;\r\n    height: ${(props) => props.height}px;\r\n    min-height: 20px;\r\n    background-color: transparent;\r\n    color: #fff;\r\n    border: none;\r\n    border-bottom: 1px solid #fff;\r\n    text-align: center;\r\n    font-weight: 200;\r\n    overflow: hidden;\r\n    resize: none;\r\n  `,\r\n  ContentInputIcon: styled(RiPencilFill)`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: -0.5rem;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: ${color.two};\r\n    }\r\n  `,\r\n  BtnBox: styled.div`\r\n    display: flex;\r\n    gap: 2rem;\r\n  `,\r\n  GoBackBtn: styled(RiArrowGoBackLine)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  padding 0.25rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 0.25rem;\r\n  \r\n  cursor: pointer;\r\n  color: #fff;\r\n  &:hover {\r\n    color: ${color.two};\r\n    border: 1px solid ${color.two};\r\n  }\r\n  `,\r\n  SubmitBtn: styled(RiCheckFill)`width: 2rem;\r\n  height: 2rem;\r\n  padding 0.25rem;\r\n  border: 1px solid #fff;\r\n  border-radius: 0.25rem;\r\n  \r\n  cursor: pointer;\r\n  color: #fff;\r\n  &:hover {\r\n    color: ${color.two};\r\n    border: 1px solid ${color.two};\r\n  }`,\r\n  ChatBtn: styled(RiChat1Fill)`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    &:hover {\r\n      color: ${color.two};\r\n    }\r\n  `,\r\n};\r\nDetail.ContentInput.defaultProps = { width: 40, height: 20 };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getDatabase, get, update, ref, query, orderByChild, equalTo } from \"firebase/database\";\r\n\r\nimport { Header } from \"../../../style/mainStyle\";\r\n\r\nfunction FriendHeader(props) {\r\n  // firebase\r\n  const database = getDatabase();\r\n\r\n  // useMemo 추가 필요\r\n\r\n  // useState\r\n  const [headerMenu, setHeaderMenu] = useState(\"\");\r\n  const [searchedFriendFromServer, setSearchedFriendFromServer] = useState(\"\");\r\n\r\n  // useSelector\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n\r\n  const handleHeaderMenuChange = (menu) => {\r\n    if (menu == headerMenu) {\r\n      setHeaderMenu(\"\");\r\n    } else {\r\n      setHeaderMenu(menu);\r\n    }\r\n  };\r\n\r\n  const renderHeaderMenu = (headerMenu) => {\r\n    switch (headerMenu) {\r\n      case \"친구 찾기\":\r\n        return (\r\n          <Header.Input\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              handleSearchFriend(e);\r\n            }}\r\n            placeholder=\"이름으로 친구 검색\"\r\n          ></Header.Input>\r\n        );\r\n\r\n      case \"친구 추가\":\r\n        return (\r\n          <>\r\n            <Header.Input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                handleSearchFriendFromServer(e);\r\n              }}\r\n              placeholder=\"Email로 친구 추가\"\r\n            ></Header.Input>\r\n            {searchedFriendFromServer && renderResult()}\r\n          </>\r\n        );\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const renderResult = () => {\r\n    //friendlist 구현 후 uid를 redux store와 비교하여 이미 존재하는경우 opacity 0.5\r\n    return (\r\n      <Header.ResultContainer>\r\n        <Header.Result>\r\n          <div>\r\n            <img src={searchedFriendFromServer.image} />\r\n          </div>\r\n          <span>{searchedFriendFromServer.name}</span>\r\n        </Header.Result>\r\n        <Header.Submit\r\n          onClick={(e) => {\r\n            handleAddFriend();\r\n          }}\r\n        ></Header.Submit>\r\n      </Header.ResultContainer>\r\n    );\r\n  };\r\n\r\n  const handleSearchFriend = (e) => {\r\n    let input = e.target.value.trim();\r\n    props.renderSearched(input);\r\n  };\r\n\r\n  const handleSearchFriendFromServer = (e) => {\r\n    let inputEmail = e.target.value;\r\n    get(query(ref(database, \"users/\"), orderByChild(\"email\"), equalTo(inputEmail)))\r\n      .then((snapshot) => {\r\n        if (snapshot.val()) {\r\n          let friendInfo = Object.values(snapshot.val())[0];\r\n          setSearchedFriendFromServer({ ...friendInfo, uid: Object.keys(snapshot.val())[0] });\r\n        } else {\r\n          setSearchedFriendFromServer(\"\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"err\", error);\r\n      });\r\n  };\r\n\r\n  const handleAddFriend = () => {\r\n    update(ref(database, \"users/\" + currentUser.uid + \"/friends\"), {\r\n      [searchedFriendFromServer.uid]: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header.Container>\r\n        <Header.Title>친구</Header.Title>\r\n        <Header.Buttons>\r\n          <Header.SearchBtn\r\n            onClick={() => {\r\n              handleHeaderMenuChange(\"친구 찾기\");\r\n            }}\r\n          />\r\n\r\n          <Header.AddFriendBtn\r\n            onClick={() => {\r\n              handleHeaderMenuChange(\"친구 추가\");\r\n            }}\r\n          />\r\n        </Header.Buttons>\r\n      </Header.Container>\r\n      {headerMenu && renderHeaderMenu(headerMenu)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FriendHeader;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setPhotoURL, setStatusMsg } from \"../../../../redux/actions/user_action\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport mime from \"mime-types\";\r\n\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { getDatabase, ref as databaseRef, update } from \"firebase/database\";\r\nimport { getAuth, updateProfile } from \"firebase/auth\";\r\n\r\nimport { Detail } from \"../../../style/mainStyle\";\r\n\r\nfunction MyDetail(props) {\r\n  const currentUser = props.currentUser;\r\n\r\n  // firebase\r\n  const storage = getStorage();\r\n  const database = getDatabase();\r\n  const auth = getAuth();\r\n\r\n  // redux\r\n  const dispatch = useDispatch();\r\n\r\n  // useState\r\n  const [imagePreview, setImagePreview] = useState();\r\n  const [inputMode, setInputMode] = useState(false);\r\n  const [updateStatusMsg, setUpdateStatusMsg] = useState(currentUser.statusMsg);\r\n  const [updateProfileImg, setUpdateProfileImg] = useState({});\r\n  const [inputStatusMsgSize, setInputStatusMsgSize] = useState({ width: 40, height: 20 });\r\n  const [inProcess, setInProcess] = useState(false);\r\n\r\n  // useForm\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ defaultValues: { statusMsg: updateStatusMsg }, mode: \"onSubmit\" });\r\n\r\n  // useRef\r\n  const statusMsgRef = useRef();\r\n  const inputOpenImageRef = useRef();\r\n  const inputTextRef = useRef();\r\n  const submitRef = useRef();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    setInputStatusMsgSize({\r\n      width: statusMsgRef.current.offsetWidth,\r\n      height: statusMsgRef.current.offsetHeight,\r\n    });\r\n  }, []);\r\n\r\n  const handleOpenImageRef = () => {\r\n    inputOpenImageRef.current.click();\r\n  };\r\n\r\n  const handleChangeProfileImage = (e) => {\r\n    const file = e.target.files[0];\r\n    const metadata = { contentType: mime.lookup(file.name) };\r\n\r\n    if (e) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = (e) => {\r\n        setImagePreview(e.target.result);\r\n      };\r\n    }\r\n    setUpdateProfileImg({ data: file, metadata: metadata });\r\n  };\r\n\r\n  const handleInputIcon = () => {\r\n    setInputMode((prev) => !prev);\r\n  };\r\n\r\n  const handleChangeStatusMsg = (e) => {\r\n    setUpdateStatusMsg(e.target.value);\r\n    setInputStatusMsgSize({\r\n      width: statusMsgRef.current.offsetWidth,\r\n      height: statusMsgRef.current.offsetHeight,\r\n    });\r\n  };\r\n\r\n  const handleSubmitRef = () => {\r\n    submitRef.current.click();\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    setInProcess(true);\r\n\r\n    try {\r\n      if (updateProfileImg.data) {\r\n        const uploadTaskSnapshot = await uploadBytes(\r\n          storageRef(storage, `user_image/${currentUser.uid}.jpg`),\r\n          updateProfileImg.data,\r\n          updateProfileImg.metadata\r\n        );\r\n        const downloadURL = await getDownloadURL(uploadTaskSnapshot.ref);\r\n        await updateProfile(auth.currentUser, {\r\n          photoURL: downloadURL,\r\n        });\r\n        await update(databaseRef(database, \"users/\" + currentUser.uid), {\r\n          image: downloadURL,\r\n        });\r\n        dispatch(setPhotoURL(downloadURL));\r\n      }\r\n      await update(databaseRef(database, \"users/\" + currentUser.uid), {\r\n        statusMessage: updateStatusMsg,\r\n      });\r\n      dispatch(setStatusMsg(updateStatusMsg));\r\n\r\n      props.hideProfile();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setInProcess(false);\r\n  };\r\n\r\n  return (\r\n    <Detail.Container>\r\n      <Detail.Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Detail.ImageBox onClick={handleOpenImageRef}>\r\n          <img src={imagePreview ?? currentUser.photoURL} />\r\n        </Detail.ImageBox>\r\n        <Detail.TextBox>\r\n          <Detail.Title> {currentUser.displayName}</Detail.Title>\r\n          <Detail.ContentInputBox>\r\n            {inputMode ? (\r\n              <Detail.ContentInput\r\n                {...register(\"statusMsg\")}\r\n                ref={inputTextRef}\r\n                onChange={(e) => {\r\n                  handleChangeStatusMsg(e);\r\n                }}\r\n                width={inputStatusMsgSize.width}\r\n                height={inputStatusMsgSize.height}\r\n              />\r\n            ) : (\r\n              <Detail.Content>{updateStatusMsg}</Detail.Content>\r\n            )}\r\n          </Detail.ContentInputBox>\r\n          <Detail.ContentInputIcon\r\n            onClick={async () => {\r\n              await handleInputIcon();\r\n              inputTextRef.current.focus();\r\n            }}\r\n          />\r\n          {/* )} */}\r\n        </Detail.TextBox>\r\n        <Detail.BtnBox>\r\n          <Detail.GoBackBtn\r\n            onClick={() => {\r\n              props.hideProfile();\r\n            }}\r\n          />\r\n          <Detail.SubmitBtn\r\n            onClick={() => {\r\n              handleSubmitRef();\r\n            }}\r\n          />\r\n        </Detail.BtnBox>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          accept=\"image/jpeg, image/png\"\r\n          ref={inputOpenImageRef}\r\n          onChange={handleChangeProfileImage}\r\n          style={{ display: \"none\" }}\r\n        />\r\n        <input type=\"submit\" ref={submitRef} disabled={inProcess} style={{ display: \"none\" }} />\r\n      </Detail.Form>\r\n      <Detail.Content\r\n        ref={statusMsgRef}\r\n        style={{ position: \"fixed\", bottom: 0, right: 0, color: \"transparent\" }}\r\n      >\r\n        {updateStatusMsg}\r\n      </Detail.Content>\r\n    </Detail.Container>\r\n  );\r\n}\r\n\r\nexport default MyDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setStatusMsg } from \"../../../../redux/actions/user_action\";\r\n\r\nimport { getDatabase, get, ref } from \"firebase/database\";\r\n\r\nimport MyDetail from \"./MyDetail\";\r\n\r\nimport { Item } from \"../../../style/mainStyle\";\r\n\r\nfunction MyProfile() {\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // firebase\r\n  const database = getDatabase();\r\n\r\n  // useEffect\r\n  useEffect(async () => {\r\n    let snapshot = await get(ref(database, \"users/\" + currentUser.uid + \"/statusMessage\"));\r\n    dispatch(setStatusMsg(snapshot.val()));\r\n  }, []);\r\n\r\n  const hideProfile = () => {\r\n    setShowProfile(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Item.Container\r\n        onClick={() => {\r\n          setShowProfile(true);\r\n        }}\r\n      >\r\n        <Item.ImageBox size=\"3.5rem\">\r\n          <img src={currentUser.photoURL} />\r\n        </Item.ImageBox>\r\n        <Item.TextBox margin=\"3.5rem\">\r\n          {/* TextBox의 margin은 ImageBox의 size와 일치시켜야함 */}\r\n          <Item.Title>{currentUser.displayName}</Item.Title>\r\n          {currentUser.statusMsg && <Item.Content>{currentUser.statusMsg}</Item.Content>}\r\n        </Item.TextBox>\r\n      </Item.Container>\r\n      {showProfile && <MyDetail currentUser={currentUser} hideProfile={hideProfile} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { Detail } from \"../../../style/mainStyle\";\r\n\r\nfunction FriendDetail(props) {\r\n  const history = useHistory();\r\n\r\n  const handleOpenChat = () => {\r\n    history.push(`/chat/${props.friend.uid}`);\r\n  };\r\n\r\n  return (\r\n    <Detail.Container>\r\n      <Detail.ImageBox>\r\n        <img src={props.friend.image}></img>\r\n      </Detail.ImageBox>\r\n      <Detail.TextBox>\r\n        <Detail.Title> {props.friend.name}</Detail.Title>\r\n        {props.friend.statusMessage && (\r\n          <Detail.Content>{props.friend.statusMessage}</Detail.Content>\r\n        )}\r\n      </Detail.TextBox>\r\n      <Detail.BtnBox>\r\n        <Detail.GoBackBtn\r\n          onClick={() => {\r\n            props.hideProfile();\r\n          }}\r\n        />\r\n        <Detail.ChatBtn\r\n          onClick={() => {\r\n            handleOpenChat();\r\n          }}\r\n        />\r\n      </Detail.BtnBox>\r\n    </Detail.Container>\r\n  );\r\n}\r\n\r\nexport default FriendDetail;\r\n","import React, { useState } from \"react\";\r\n\r\nimport FriendDetail from \"./FriendDetail\";\r\n\r\nimport { Item } from \"../../../style/mainStyle\";\r\n\r\nfunction Friend(props) {\r\n  const [showProfile, setShowProfile] = useState(false);\r\n\r\n  const hideProfile = () => {\r\n    setShowProfile(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Item.Container\r\n        onClick={() => {\r\n          setShowProfile(true);\r\n        }}\r\n      >\r\n        <Item.ImageBox>\r\n          <img src={props.friend.image} />\r\n        </Item.ImageBox>\r\n        <Item.TextBox>\r\n          <Item.Title> {props.friend.name}</Item.Title>\r\n          {props.friend.statusMessage && <Item.Content>{props.friend.statusMessage}</Item.Content>}\r\n        </Item.TextBox>\r\n      </Item.Container>\r\n      {showProfile && <FriendDetail friend={props.friend} hideProfile={hideProfile} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Friend;\r\n","import React from \"react\";\r\n\r\nimport Friend from \"./Friend\";\r\n\r\nimport { List } from \"../../../style/mainStyle\";\r\n\r\nfunction FriendList(props) {\r\n  const renderFriends = () => {\r\n    let friendArray = [];\r\n    props.friendData.map((friend, index) => {\r\n      friendArray.push(<Friend key={index} friend={friend} />);\r\n    });\r\n    return friendArray.sort((a, b) => {\r\n      return a.props.friend.name > b.props.friend.name ? 1 : -1;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <List.Container>\r\n      <List.Title>친구 ({props.friendData.length})</List.Title>\r\n      {renderFriends()}\r\n    </List.Container>\r\n  );\r\n}\r\n\r\nexport default FriendList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getDatabase, get, ref, onChildAdded, onChildRemoved, off } from \"firebase/database\";\r\n\r\nimport FriendHeader from \"./FriendPanel/FriendHeader\";\r\nimport MyProfile from \"./FriendPanel/MyProfile\";\r\nimport FriendList from \"./FriendPanel/FriendList\";\r\n\r\nimport * as Main from \"../../style/mainStyle\";\r\n\r\nfunction FriendPanel() {\r\n  // useSelector\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n\r\n  // firebase\r\n  const database = getDatabase();\r\n  const friendListRef = ref(database, \"users/\" + currentUser.uid + \"/friends\");\r\n\r\n  // useState\r\n\r\n  const [friendData, setFriendData] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchedFriendData, setSearchedFriendData] = useState([]);\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    addFriendListener();\r\n    return () => {\r\n      off(friendListRef);\r\n    };\r\n    // removeFriendListener();\r\n  }, []);\r\n\r\n  const addFriendListener = () => {\r\n    let updatedFriendList = [];\r\n    onChildAdded(friendListRef, (snapshot) => {\r\n      updatedFriendList.push(snapshot.key);\r\n      const friendSet = new Set(updatedFriendList);\r\n      updatedFriendList = [...friendSet];\r\n      makeFriendData(updatedFriendList);\r\n    });\r\n  };\r\n\r\n  //  친구 삭제시 업데이트 추후 추가 예정\r\n  // const removeFriendListener = () => {};\r\n\r\n  const makeFriendData = async (friendIdArray) => {\r\n    let updatedFriendData = [];\r\n    await Promise.all(\r\n      friendIdArray.map(async (friendId, i) => {\r\n        let snapshot = await get(ref(database, \"users/\" + friendId));\r\n        updatedFriendData.push(snapshot.val());\r\n        updatedFriendData[i][\"uid\"] = friendId;\r\n      })\r\n    );\r\n    setFriendData(updatedFriendData);\r\n  };\r\n\r\n  const renderSearched = (input) => {\r\n    setIsSearching(true);\r\n\r\n    if (input) {\r\n      let friendDataArray = [...friendData];\r\n      setSearchedFriendData(\r\n        friendDataArray.filter((friend) => {\r\n          let regex = new RegExp(input);\r\n          return friend.name.search(regex) != -1;\r\n        })\r\n      );\r\n    } else {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Main.Wrapper>\r\n      <FriendHeader renderSearched={renderSearched} />\r\n      {isSearching ? (\r\n        <FriendList friendData={searchedFriendData} />\r\n      ) : (\r\n        <>\r\n          <MyProfile />\r\n          <Main.Partition />\r\n          <FriendList friendData={friendData} />\r\n        </>\r\n      )}\r\n    </Main.Wrapper>\r\n  );\r\n}\r\n\r\nexport default FriendPanel;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Header } from \"../../../style/mainStyle\";\r\n\r\nfunction ChatHeader(props) {\r\n  const [headerMenu, setHeaderMenu] = useState(\"\");\r\n\r\n  const handleHeaderMenuChange = (menu) => {\r\n    if (menu == headerMenu) {\r\n      setHeaderMenu(\"\");\r\n    } else {\r\n      setHeaderMenu(menu);\r\n    }\r\n  };\r\n\r\n  const renderHeaderMenu = (headerMenu) => {\r\n    switch (headerMenu) {\r\n      case \"채팅 찾기\":\r\n        return (\r\n          <Header.Input\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              handleSearchChat(e);\r\n            }}\r\n            placeholder=\"친구 이름으로 채팅 검색\"\r\n          ></Header.Input>\r\n        );\r\n\r\n      // case \"새 채팅\":\r\n      //   return <></>;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSearchChat = (e) => {\r\n    let input = e.target.value.trim();\r\n    props.renderSearched(input);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header.Container>\r\n        <Header.Title>채팅</Header.Title>\r\n        <Header.Buttons>\r\n          <Header.SearchBtn\r\n            onClick={() => {\r\n              handleHeaderMenuChange(\"채팅 찾기\");\r\n            }}\r\n          />\r\n\r\n          {/* <Header.AddChatBtn\r\n            onClick={() => {\r\n              handleHeaderMenuChange(\"새 채팅\");\r\n            }}\r\n          /> */}\r\n        </Header.Buttons>\r\n      </Header.Container>\r\n      {headerMenu && renderHeaderMenu(headerMenu)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { getDatabase, get, ref } from \"firebase/database\";\r\n\r\nimport { Item } from \"../../../style/mainStyle\";\r\n\r\nfunction Chat(props) {\r\n  const history = useHistory();\r\n\r\n  // firebase\r\n  const database = getDatabase();\r\n  const friendInfoRef = ref(database, \"users/\" + props.chat.friendId);\r\n\r\n  const handleOpenChat = () => {\r\n    history.push(`/chat/${props.chat.friend.uid}`);\r\n  };\r\n\r\n  const renderTime = () => {\r\n    const now = new Date();\r\n    const messageTime = new Date(props.chat.lastUpdate.timestamp);\r\n    if (now.getDate() != messageTime.getDate()) {\r\n      return `${messageTime.getMonth() + 1}월 ${messageTime.getDate()}일`;\r\n    } else {\r\n      if (messageTime.getHours() < 10 && messageTime.getMinutes() < 10) {\r\n        return `0${messageTime.getHours()}:0${messageTime.getMinutes()}`;\r\n      } else if (messageTime.getHours() > 10 && messageTime.getMinutes() < 10) {\r\n        return `${messageTime.getHours()}:0${messageTime.getMinutes()}`;\r\n      } else if (messageTime.getHours() < 10 && messageTime.getMinutes() > 10) {\r\n        return `0${messageTime.getHours()}:${messageTime.getMinutes()}`;\r\n      } else {\r\n        return `${messageTime.getHours()}:${messageTime.getMinutes()}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Item.Container\r\n      onClick={() => {\r\n        handleOpenChat();\r\n      }}\r\n    >\r\n      <Item.ImageBox>\r\n        <img src={props.chat.friend.image} />\r\n      </Item.ImageBox>\r\n      <Item.TextBox>\r\n        <Item.Title> {props.chat.friend.name}</Item.Title>\r\n        {props.chat.lastUpdate && (\r\n          <Item.LastMessage>\r\n            <Item.Content>{props.chat.lastUpdate.content}</Item.Content>{\" \"}\r\n            <Item.Time>{renderTime()}</Item.Time>\r\n          </Item.LastMessage>\r\n        )}\r\n      </Item.TextBox>\r\n    </Item.Container>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\n\r\nimport Chat from \"./Chat\";\r\n\r\nimport { List } from \"../../../style/mainStyle\";\r\n\r\nfunction ChatList(props) {\r\n  const renderChats = () => {\r\n    let chatArray = [];\r\n    props.chatData.map((chat, index) => {\r\n      chatArray.push(<Chat key={index} chat={chat} />);\r\n    });\r\n    return chatArray.sort((a, b) => {\r\n      return a.props.chat.lastUpdate.timestamp < b.props.chat.lastUpdate.timestamp ? 1 : -1;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <List.Container>\r\n      {props.chatData[0] ? renderChats() : <List.Empty>채팅 목록이 비어있습니다.</List.Empty>}\r\n    </List.Container>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getDatabase, ref, onValue, get, off } from \"firebase/database\";\r\n\r\nimport ChatHeader from \"./ChatPanel/ChatHeader\";\r\nimport ChatList from \"./ChatPanel/ChatList\";\r\n\r\nimport * as Main from \"../../style/mainStyle\";\r\n\r\nfunction ChatPanel() {\r\n  // useSelector\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n\r\n  // firebase\r\n  const database = getDatabase();\r\n  const chatListRef = ref(database, \"users/\" + currentUser?.uid + \"/chats\");\r\n\r\n  // useState\r\n  const [chatData, setChatData] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [searchedChatData, setSearchedChatData] = useState([]);\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    addChatListener();\r\n    return () => {\r\n      off(chatListRef);\r\n    };\r\n  }, []);\r\n\r\n  const addChatListener = async () => {\r\n    await onValue(chatListRef, async (snapshot) => {\r\n      if (snapshot.val()) {\r\n        makeChatData(Object.keys(snapshot.val()));\r\n      }\r\n    });\r\n  };\r\n\r\n  const makeChatData = async (chatIdArray, i) => {\r\n    let updatedChatData = [];\r\n    await Promise.all(\r\n      chatIdArray.map(async (chatId, i) => {\r\n        let snapshot = await get(ref(database, \"chatRooms/\" + chatId));\r\n        let chat = snapshot.val();\r\n        let friend = await getFriendInfo(chatId);\r\n        updatedChatData.push({ ...chat, friend });\r\n      })\r\n    );\r\n    setChatData(updatedChatData);\r\n  };\r\n\r\n  const getFriendInfo = async (chatId) => {\r\n    const friendId = getFriendIdFromChatId(chatId);\r\n    let snapshot = await get(ref(database, \"users/\" + friendId));\r\n    const friendInfo = { ...snapshot.val(), uid: friendId };\r\n    return friendInfo;\r\n  };\r\n  const getFriendIdFromChatId = (chatId) => {\r\n    if (currentUser.uid == chatId.substring(0, 28)) {\r\n      return chatId.substring(28);\r\n    } else {\r\n      return chatId.substring(0, 28);\r\n    }\r\n  };\r\n\r\n  const renderSearched = (input) => {\r\n    setIsSearching(true);\r\n\r\n    if (input) {\r\n      let chatDataArray = [...chatData];\r\n\r\n      setSearchedChatData(\r\n        chatDataArray.filter((chat) => {\r\n          let regex = new RegExp(input);\r\n          return chat.friend.name.search(regex) != -1;\r\n        })\r\n      );\r\n    } else {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n  return (\r\n    <Main.Wrapper>\r\n      <ChatHeader renderSearched={renderSearched} />\r\n      <ChatList chatData={isSearching ? searchedChatData : chatData} />\r\n    </Main.Wrapper>\r\n  );\r\n}\r\n\r\nexport default ChatPanel;\r\n","import React from \"react\";\r\n\r\nimport { Header } from \"../../../style/mainStyle\";\r\n\r\nfunction MoreHeader() {\r\n  return (\r\n    <Header.Container>\r\n      <Header.Title>더 보기</Header.Title>\r\n    </Header.Container>\r\n  );\r\n}\r\n\r\nexport default MoreHeader;\r\n","import React from \"react\";\r\nimport MoreHeader from \"./MorePanel/MoreHeader\";\r\n\r\nimport * as Main from \"../../style/mainStyle\";\r\n\r\nfunction MorePanel() {\r\n  return (\r\n    <Main.Wrapper>\r\n      <MoreHeader /> * 이 페이지에 들어갈 추가적인 기능은 추후 개발 예정입니다.\r\n    </Main.Wrapper>\r\n  );\r\n}\r\n\r\nexport default MorePanel;\r\n","import styled from \"styled-components\";\r\nimport * as color from \"./color\";\r\n\r\nimport { IoPeopleOutline, IoChatboxOutline } from \"react-icons/io5\";\r\nimport { IoIosMore, IoIosLogOut } from \"react-icons/io\";\r\n\r\nexport const Wrapper = styled.nav`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 0.5rem rgba(30, 174, 152, 0.3);\r\n`;\r\nexport const Menu = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\nexport const FriendIcon = styled(IoPeopleOutline)`\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => (props.on == \"true\" ? color.one : color.two)};\r\n  &:hover {\r\n    color: ${color.one};\r\n  }\r\n`;\r\nexport const ChatIcon = styled(IoChatboxOutline)`\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => (props.on == \"true\" ? color.one : color.two)};\r\n  &:hover {\r\n    color: ${color.one};\r\n  }\r\n`;\r\nexport const MoreIcon = styled(IoIosMore)`\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => (props.on == \"true\" ? color.one : color.two)};\r\n  &:hover {\r\n    color: ${color.one};\r\n  }\r\n`;\r\nexport const SignOutIcon = styled(IoIosLogOut)`\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${color.two};\r\n  &:hover {\r\n    color: ${color.one};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\n\r\nimport * as Tab from \"../../style/tabStyle\";\r\n\r\nfunction TabPanel(props) {\r\n  const auth = getAuth();\r\n  const handleLogout = () => {\r\n    signOut(auth);\r\n  };\r\n  return (\r\n    <Tab.Wrapper>\r\n      <Tab.Menu>\r\n        <li>\r\n          <Tab.FriendIcon\r\n            onClick={() => {\r\n              props.handleTab(\"friend\");\r\n            }}\r\n            on={props.tab === \"friend\" ? \"true\" : \"false\"}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Tab.ChatIcon\r\n            onClick={() => {\r\n              props.handleTab(\"chat\");\r\n            }}\r\n            on={props.tab === \"chat\" ? \"true\" : \"false\"}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Tab.MoreIcon\r\n            onClick={() => {\r\n              props.handleTab(\"more\");\r\n            }}\r\n            on={props.tab === \"more\" ? \"true\" : \"false\"}\r\n          />\r\n        </li>\r\n        <li>\r\n          <Tab.SignOutIcon onClick={handleLogout} />\r\n        </li>\r\n      </Tab.Menu>\r\n    </Tab.Wrapper>\r\n  );\r\n}\r\n\r\nexport default TabPanel;\r\n","import React, { useState } from \"react\";\r\n\r\nimport FriendPanel from \"./MainPage/FriendPanel\";\r\nimport ChatPanel from \"./MainPage/ChatPanel\";\r\nimport MorePanel from \"./MainPage/MorePanel\";\r\nimport TabPanel from \"./MainPage/TabPanel\";\r\n\r\nfunction MainPage() {\r\n  const [tab, setTab] = useState(\"friend\");\r\n\r\n  const handleTab = (thisTab) => {\r\n    setTab(thisTab);\r\n  };\r\n\r\n  const renderMainPanel = () => {\r\n    switch (tab) {\r\n      case \"friend\":\r\n        return <FriendPanel />;\r\n      case \"chat\":\r\n        return <ChatPanel />;\r\n      case \"more\":\r\n        return <MorePanel />;\r\n      default:\r\n        alert(\"something wrong..\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderMainPanel()}\r\n      <TabPanel tab={tab} handleTab={handleTab} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as color from \"./color\";\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(70deg, ${color.two}, ${color.three});\r\n`;\r\nexport const Title = styled.h1`\r\n  font-size: ${(props) => props.size};\r\n  font-family: \"Barlow\", sans-serif;\r\n  font-weight: 100;\r\n  color: ${color.one};\r\n  text-shadow: 2px 2px 2px ${color.four};\r\n  margin-bottom: 2rem;\r\n`;\r\nTitle.defaultProps = { size: \"2rem\" };\r\nexport const Form = styled.form`\r\n  width: 240px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  color: ${color.one};\r\n`;\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 0.5rem;\r\n  color:${color.one};\r\n  background: ${color.three};\r\n  border: 1px solid ${color.two};\r\n  box-shadow: 1px 1px 1px ${color.four};\r\n  &:focus {\r\n    background: ${color.four};\r\n    outline : 1.5px solid ${color.one};\r\n    }\r\n  }\r\n`;\r\nexport const Submit = styled.input`\r\n  margin-top: 1rem;\r\n  height: 40px;\r\n  color: ${color.one};\r\n  text-shadow: 1px 1px 1px ${color.four};\r\n  background: ${color.three};\r\n\r\n  border: 1px solid ${color.two};\r\n  box-shadow: 1px 1px 1px ${color.four};\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-shadow: 1px 1px 1px ${color.three};\r\n    background: ${color.four};\r\n    outline: 1.5px solid ${color.one};\r\n  }\r\n`;\r\nexport const WarningMsg = styled.p`\r\n  font-size: 0.8rem;\r\n  color: crimson;\r\n`;\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: underline;\r\n  color: ${color.one};\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nimport * as Auth from \"../style/authStyle\";\r\n\r\nimport { RiWechat2Line } from \"react-icons/ri\";\r\n\r\nfunction LoginPage() {\r\n  // firebase\r\n  const auth = getAuth();\r\n\r\n  // useForm\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onSubmit\" });\r\n\r\n  // useState\r\n  const [errorFromSubmit, setErrorFromSubmit] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      await signInWithEmailAndPassword(auth, data.email, data.password);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      if (error.message == \"Firebase: Error (auth/user-not-found).\") {\r\n        setErrorFromSubmit(\"가입되지 않은 이메일 입니다.\");\r\n      } else if (error.message == \"Firebase: Error (auth/wrong-password).\") {\r\n        setErrorFromSubmit(\"비밀번호를 다시 확인해주세요.\");\r\n      } else {\r\n        setErrorFromSubmit(error.message);\r\n      }\r\n      setLoading(false);\r\n      console.log(\"error\", error.message);\r\n      setTimeout(() => {\r\n        setErrorFromSubmit(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Auth.Wrapper>\r\n      <Auth.Title size=\"3rem\">\r\n        Aqua\r\n        <RiWechat2Line\r\n          style={{\r\n            width: \"1.5rem\",\r\n            verticalAlign: \"top\",\r\n            marginLeft: 10,\r\n          }}\r\n        />\r\n      </Auth.Title>\r\n\r\n      <Auth.Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Auth.InputWrapper>\r\n          <label>이메일</label>\r\n          <Auth.Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n          />\r\n          {errors.email && <Auth.WarningMsg> 이메일을 입력해주세요.</Auth.WarningMsg>}\r\n        </Auth.InputWrapper>\r\n\r\n        <Auth.InputWrapper>\r\n          <label>비밀번호</label>\r\n          <Auth.Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            {...register(\"password\", { required: true, minLength: 8 })}\r\n          />\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <Auth.WarningMsg> 비밀번호를 입력해주세요.</Auth.WarningMsg>\r\n          )}\r\n          {errors.password && errors.password.type === \"minLength\" && (\r\n            <Auth.WarningMsg> 최소 8자</Auth.WarningMsg>\r\n          )}\r\n        </Auth.InputWrapper>\r\n\r\n        {errorFromSubmit && <Auth.WarningMsg>{errorFromSubmit}</Auth.WarningMsg>}\r\n        <Auth.Submit type=\"submit\" value=\"로그인\" disabled={loading} />\r\n\r\n        <Auth.StyledLink to=\"register\">아직 아이디가 없다면...</Auth.StyledLink>\r\n      </Auth.Form>\r\n    </Auth.Wrapper>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { initializeApp } from \"firebase/app\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD-DfS739VzKJU8_qPfhMZyMnRPj5gGeaQ\",\r\n  authDomain: \"react-chattingapp.firebaseapp.com\",\r\n  projectId: \"react-chattingapp\",\r\n  storageBucket: \"react-chattingapp.appspot.com\",\r\n  messagingSenderId: \"135876930581\",\r\n  appId: \"1:135876930581:web:a40fee1af6ad1a6363721c\",\r\n  measurementId: \"G-HQJS3PV87Q\",\r\n};\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport default app;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport firebase from \"../../firebase\";\r\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\n\r\nimport md5 from \"md5\";\r\n\r\nimport * as Auth from \"../style/authStyle\";\r\n\r\nfunction RegisterPage() {\r\n  // firebase\r\n  const auth = getAuth();\r\n  const database = getDatabase();\r\n\r\n  // useForm\r\n  const {\r\n    register,\r\n    watch,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onSubmit\" });\r\n\r\n  // useRef\r\n  const password = useRef();\r\n  password.current = watch(\"password\");\r\n\r\n  // useState\r\n  const [errorFromSubmit, setErrorFromSubmit] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      await createUserWithEmailAndPassword(auth, data.email, data.password);\r\n      let createdUser = auth.currentUser;\r\n      await updateProfile(createdUser, {\r\n        displayName: data.name,\r\n        photoURL: `http://gravatar.com/avatar/${md5(createdUser.email)}?d=identicon`,\r\n      });\r\n      await set(ref(database, \"users/\" + createdUser.uid), {\r\n        email: createdUser.email,\r\n        name: createdUser.displayName,\r\n        image: createdUser.photoURL,\r\n        friends: { JIgPFjBwBYP5qI00Lzy3bkahkA13: true }, // for Demo\r\n      });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.message == \"Firebase: Error (auth/email-already-in-use).\") {\r\n        setErrorFromSubmit(\"이미 가입된 이메일입니다.\");\r\n      } else {\r\n        setErrorFromSubmit(error.message);\r\n      }\r\n      setLoading(false);\r\n      console.log(\"error\", error.message);\r\n      setTimeout(() => {\r\n        setErrorFromSubmit(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Auth.Wrapper>\r\n      <Auth.Title>회원 가입</Auth.Title>\r\n      <Auth.Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Auth.WarningMsg style={{ textAlign: \"right\" }}>* 필수 입력</Auth.WarningMsg>\r\n\r\n        <Auth.InputWrapper>\r\n          <label>이메일*</label>\r\n          <Auth.Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n          />\r\n          {errors.email && errors.email.type === \"required\" && (\r\n            <Auth.WarningMsg> 필수 입력 사항입니다.</Auth.WarningMsg>\r\n          )}\r\n          {errors.email && errors.email.type === \"pattern\" && (\r\n            <Auth.WarningMsg> 이메일 형식에 맞지 않습니다.</Auth.WarningMsg>\r\n          )}\r\n        </Auth.InputWrapper>\r\n        <Auth.InputWrapper>\r\n          <label>이름*</label>\r\n          <Auth.Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            {...register(\"name\", { required: true, minLength: 2, maxLength: 8 })}\r\n          />\r\n          {errors.name && errors.name.type === \"required\" && (\r\n            <Auth.WarningMsg> 필수 입력 사항입니다.</Auth.WarningMsg>\r\n          )}\r\n          {errors.name &&\r\n            (errors.name.type === \"minLength\" || errors.name.type === \"maxLength\") && (\r\n              <Auth.WarningMsg> 입력 길이를 다시 확인해주세요. (2-8글자)</Auth.WarningMsg>\r\n            )}\r\n        </Auth.InputWrapper>\r\n\r\n        <Auth.InputWrapper>\r\n          <label>비밀번호*</label>\r\n          <Auth.Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            {...register(\"password\", { required: true, minLength: 8 })}\r\n          />\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <Auth.WarningMsg> 필수 입력 사항입니다.</Auth.WarningMsg>\r\n          )}\r\n          {errors.password && errors.password.type === \"minLength\" && (\r\n            <Auth.WarningMsg> 비밀번호는 최소 8자 이상이어야 합니다.</Auth.WarningMsg>\r\n          )}\r\n        </Auth.InputWrapper>\r\n\r\n        <Auth.InputWrapper>\r\n          <label>비밀번호 확인*</label>\r\n          <Auth.Input\r\n            type=\"password\"\r\n            name=\"password_confirm\"\r\n            {...register(\"password_confirm\", {\r\n              required: true,\r\n              validate: (value) => value === password.current,\r\n            })}\r\n          />\r\n          {errors.password_confirm && errors.password_confirm.type === \"required\" && (\r\n            <Auth.WarningMsg> 필수 입력 사항입니다.</Auth.WarningMsg>\r\n          )}\r\n          {errors.password_confirm && errors.password_confirm.type === \"validate\" && (\r\n            <Auth.WarningMsg> 비밀번호가 일치하지 않습니다.</Auth.WarningMsg>\r\n          )}\r\n        </Auth.InputWrapper>\r\n\r\n        {errorFromSubmit && <Auth.WarningMsg> {errorFromSubmit}</Auth.WarningMsg>}\r\n        <Auth.Submit type=\"submit\" value=\"회원가입\" disabled={loading} />\r\n\r\n        <Auth.StyledLink to=\"login\">이미 아이디가 있다면...</Auth.StyledLink>\r\n      </Auth.Form>\r\n    </Auth.Wrapper>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import styled from \"styled-components\";\r\nimport * as color from \"./color\";\r\n\r\nimport { RiArrowLeftSLine, RiSearchLine, RiSendPlane2Fill } from \"react-icons/ri\";\r\n\r\nexport const Header = {\r\n  Wrapper: styled.div`\r\n    width: 100%;\r\n    height: 3rem;\r\n    padding: 0 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    box-shadow: 0 0 0.5rem rgba(30, 174, 152, 0.3);\r\n  `,\r\n  GoBackBtn: styled(RiArrowLeftSLine)`\r\n    width: 1.5rem;\r\n    height: 2rem;\r\n    color: ${color.two};\r\n    cursor: pointer;\r\n  `,\r\n  FriendName: styled.h2`\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n  `,\r\n  SearchBtn: styled(RiSearchLine)`\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    color: ${color.two};\r\n    cursor: pointer;\r\n  `,\r\n  SearchInputWrapper: styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `,\r\n  SearchInput: styled.input`\r\n    width: 80%;\r\n    height: 2rem;\r\n    border-radius: 2rem;\r\n    border: 2px solid ${color.two};\r\n    padding: 0.625rem 1.25rem;\r\n  `,\r\n};\r\nexport const Body = {\r\n  Wrapper: styled.div`\r\n    width: 100%;\r\n    height: calc(100vh - 6rem);\r\n    padding: 1rem 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow-y: auto;\r\n    background: ${color.three};\r\n  `,\r\n  MessageWrapper: styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: end;\r\n    gap: 0.5rem;\r\n    &.mine {\r\n      align-self: end;\r\n      flex-direction: row-reverse;\r\n    }\r\n    &.yours {\r\n      align-self: start;\r\n    }\r\n  `,\r\n  FriendImgBox: styled.div`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    border-radius: 1rem;\r\n    overflow: hidden;\r\n  `,\r\n  Message: styled.p`\r\n    max-width: calc(100% - 6.5rem);\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.3);\r\n    line-height: 1.5rem;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    word-break: break-all;\r\n\r\n    &.mine {\r\n      border-bottom-right-radius: 0;\r\n      background-color: ${color.two};\r\n      color: #fff;\r\n    }\r\n    &.yours {\r\n      border-top-left-radius: 0;\r\n      background-color: #fff;\r\n    }\r\n  `,\r\n  MessageTime: styled.span`\r\n    color: #777;\r\n    font-size: 0.75rem;\r\n    font-weight: 200;\r\n    min-width: 3.5rem;\r\n    margin-bottom: 0.25rem;\r\n\r\n    &.mine {\r\n      text-align: right;\r\n    }\r\n  `,\r\n};\r\nexport const Input = {\r\n  Form: styled.form`\r\n    width: 100%;\r\n    height: 3rem;\r\n    padding: 0 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  `,\r\n  InputText: styled.input`\r\n    width: 100%;\r\n    height: 2rem;\r\n    border-radius: 2rem;\r\n    border: 2px solid ${color.two};\r\n    padding: 0.625rem 1.25rem;\r\n  `,\r\n  Submit: styled(RiSendPlane2Fill)`\r\n    width: 2rem;\r\n    height: 2rem;\r\n    padding 0.325rem;\r\n    border-radius:1rem;\r\n    background-color: ${color.two};\r\n    color: #fff;\r\n    cursor:pointer;\r\n  `,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { Header } from \"../../style/chatStyle\";\r\n\r\nfunction ChatHeader(props) {\r\n  const history = useHistory();\r\n\r\n  const [searchHeader, setSearchHeader] = useState(false);\r\n\r\n  const handleClickGoBackBtn = () => {\r\n    history.goBack();\r\n  };\r\n  const handleClickSearchBtn = () => {\r\n    setSearchHeader((prev) => {\r\n      return !prev;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Header.Wrapper>\r\n      <Header.GoBackBtn onClick={handleClickGoBackBtn} />\r\n      {searchHeader ? (\r\n        <Header.SearchInput\r\n          onChange={(e) => {\r\n            props.handleSearchMessage(e.target.value.trim());\r\n          }}\r\n        />\r\n      ) : (\r\n        <Header.FriendName>{props.currentFriend?.name} 님 과의 대화</Header.FriendName>\r\n      )}\r\n\r\n      <Header.SearchBtn onClick={handleClickSearchBtn} />\r\n    </Header.Wrapper>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Body } from \"../../style/chatStyle\";\r\n\r\nfunction Message(props) {\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n  const [isMine, setIsMine] = useState();\r\n\r\n  useEffect(() => {\r\n    if (props.message.user.id == currentUser.uid) {\r\n      setIsMine(true);\r\n    } else {\r\n      setIsMine(false);\r\n    }\r\n  }, []);\r\n\r\n  const renderTime = () => {\r\n    const now = new Date();\r\n    const messageTime = new Date(props.message.timestamp);\r\n    if (now.getDate() != messageTime.getDate()) {\r\n      return `${messageTime.getMonth() + 1}월 ${messageTime.getDate()}일`;\r\n    } else {\r\n      if (messageTime.getHours() < 10 && messageTime.getMinutes() < 10) {\r\n        return `0${messageTime.getHours()}:0${messageTime.getMinutes()}`;\r\n      } else if (messageTime.getHours() > 10 && messageTime.getMinutes() < 10) {\r\n        return `${messageTime.getHours()}:0${messageTime.getMinutes()}`;\r\n      } else if (messageTime.getHours() < 10 && messageTime.getMinutes() > 10) {\r\n        return `0${messageTime.getHours()}:${messageTime.getMinutes()}`;\r\n      } else {\r\n        return `${messageTime.getHours()}:${messageTime.getMinutes()}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Body.MessageWrapper className={isMine ? \"mine\" : \"yours\"}>\r\n      {isMine || (\r\n        <Body.FriendImgBox>\r\n          <img src={props.message.user.image} />\r\n        </Body.FriendImgBox>\r\n      )}\r\n      <Body.Message className={isMine ? \"mine\" : \"yours\"}>{props.message.content}</Body.Message>\r\n      <Body.MessageTime className={isMine ? \"mine\" : \"yours\"}>{renderTime()}</Body.MessageTime>\r\n    </Body.MessageWrapper>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport Message from \"./Message\";\r\n\r\nimport { Body } from \"../../style/chatStyle\";\r\n\r\nfunction ChatBody(props) {\r\n  const bodyEnd = useRef();\r\n  useEffect(() => {\r\n    bodyEnd.current.scrollIntoView();\r\n  }, [props]);\r\n\r\n  const renderMessages = (messages) => {\r\n    if (messages.length > 0) {\r\n      return messages.map((message) => <Message key={message.timestamp} message={message} />);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Body.Wrapper>\r\n      {renderMessages(props.messages)}\r\n      <div ref={bodyEnd} />\r\n    </Body.Wrapper>\r\n  );\r\n}\r\n\r\nexport default ChatBody;\r\n","import React, { useRef } from \"react\";\r\n\r\nimport { Input } from \"../../style/chatStyle\";\r\n\r\nfunction ChatInput(props) {\r\n  const inputRef = useRef();\r\n\r\n  const handleSubmit = async () => {\r\n    await props.sendMessage(inputRef.current.value.trim());\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <Input.Form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSubmit();\r\n      }}\r\n    >\r\n      <Input.InputText type=\"text\" ref={inputRef} />\r\n      <Input.Submit onClick={handleSubmit} />\r\n    </Input.Form>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getDatabase,\r\n  ref,\r\n  get,\r\n  push,\r\n  update,\r\n  serverTimestamp,\r\n  onValue,\r\n  off,\r\n} from \"firebase/database\";\r\n\r\nimport ChatHeader from \"./ChatPage/ChatHeader\";\r\nimport ChatBody from \"./ChatPage/ChatBody\";\r\nimport ChatInput from \"./ChatPage/ChatInput\";\r\n\r\nfunction ChatPage() {\r\n  // firebase\r\n  const database = getDatabase();\r\n\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n  const { friendUid } = useParams();\r\n  const [currentFriend, setCurrentFriend] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    await get(ref(database, \"users/\" + friendUid)).then((dataSnapshot) => {\r\n      setCurrentFriend(dataSnapshot.val());\r\n    });\r\n  }, []);\r\n\r\n  const makeChatRoomId = (myUid, friendUid) => {\r\n    if (myUid > friendUid) {\r\n      return myUid + friendUid;\r\n    } else {\r\n      return friendUid + myUid;\r\n    }\r\n  };\r\n  const chatRoomId = makeChatRoomId(currentUser.uid, friendUid);\r\n\r\n  useEffect(() => {\r\n    addMessageListener();\r\n    return () => {\r\n      off(ref(database, \"chatRooms/\" + chatRoomId + \"/messages\"));\r\n      setMessages([]);\r\n    };\r\n  }, []);\r\n\r\n  const addMessageListener = () => {\r\n    onValue(ref(database, \"chatRooms/\" + chatRoomId + \"/messages\"), (snapshot) => {\r\n      if (snapshot.val()) {\r\n        setMessages(Object.values(snapshot.val()));\r\n      }\r\n    });\r\n  };\r\n\r\n  // ChatHeader에서 사용\r\n  const handleSearchMessages = (word) => {\r\n    if (word) {\r\n      setIsSearching(true);\r\n      const chatRoomMessages = [...messages];\r\n      const regex = new RegExp(word, \"gi\");\r\n      const searchResults = chatRoomMessages.reduce((acc, message) => {\r\n        if ((message.content && message.content.match(regex)) || message.user.name.match(regex)) {\r\n          acc.push(message);\r\n        }\r\n        return acc;\r\n      }, []);\r\n      setSearchResults(searchResults);\r\n    } else {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  // ChatInput에서 사용\r\n  const sendMessage = async (text) => {\r\n    if (text) {\r\n      const message = {\r\n        timestamp: serverTimestamp(database),\r\n        user: {\r\n          id: currentUser.uid,\r\n          name: currentUser.displayName,\r\n          image: currentUser.photoURL,\r\n        },\r\n        content: text,\r\n      };\r\n      setIsLoading(true);\r\n      await push(ref(database, \"chatRooms/\" + chatRoomId + \"/messages\"), message);\r\n      await update(ref(database, \"chatRooms/\" + chatRoomId), { lastUpdate: message });\r\n      if (!messages[0]) {\r\n        await update(ref(database, \"users/\" + currentUser.uid + \"/chats\"), { [chatRoomId]: true });\r\n        await update(ref(database, \"users/\" + friendUid + \"/chats\"), { [chatRoomId]: true });\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ChatHeader currentFriend={currentFriend} handleSearchMessage={handleSearchMessages} />\r\n      <ChatBody messages={isSearching ? searchResults : messages} />\r\n      <ChatInput sendMessage={sendMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport * as color from \"./color\";\r\n\r\nconst rotate = keyframes`\r\n0%{transform:rotate(0deg);}\r\n100%{transform:rotate(360deg);}\r\n`;\r\nconst dots = keyframes`\r\n0%{width:2.5rem;}\r\n100%{width:0rem;}\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  background: ${color.one};\r\n`;\r\nexport const Loader = styled.div`\r\n  position: relative;\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border-radius: 50%;\r\n  background: linear-gradient(45deg, transparent, transparent 40%, ${color.two});\r\n  animation: ${rotate} 3s linear infinite;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 5%;\r\n    right: 5%;\r\n    bottom: 5%;\r\n    left: 5%;\r\n    border-radius: 50%;\r\n    background: ${color.one};\r\n    z-index: 222;\r\n  }\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-radius: 50%;\r\n    background: linear-gradient(45deg, transparent, transparent 40%, ${color.three});\r\n    z-index: 111;\r\n    filter: blur(1rem);\r\n  }\r\n`;\r\n\r\nLoader.defaultProps = { size: \"8rem\" };\r\nexport const Text = styled.p`\r\n  position: relative;\r\n  font-size: 2rem;\r\n  font-weight: 200;\r\n  color: ${color.four};\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 2rem;\r\n    background: ${color.one};\r\n    z-index: 111;\r\n    animation: ${dots} 3s linear infinite;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as Loader from \"../style/loaderStyle\";\r\n\r\nfunction LoadingPage() {\r\n  return (\r\n    <Loader.Wrapper>\r\n      <Loader.Loader />\r\n      <Loader.Text>&nbsp;&nbsp;loading ...&nbsp;</Loader.Text>\r\n    </Loader.Wrapper>\r\n  );\r\n}\r\n\r\nexport default LoadingPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Switch, Route } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUser, clearUser } from \"./redux/actions/user_action\";\r\n\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nimport MainPage from \"./components/pages/MainPage\";\r\nimport LoginPage from \"./components/pages/LoginPage\";\r\nimport RegisterPage from \"./components/pages/RegisterPage\";\r\nimport ChatPage from \"./components/pages/ChatPage\";\r\nimport LoadingPage from \"./components/pages/LoadingPage\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const auth = getAuth();\r\n  const isLoading = useSelector((state) => state.user.isLoading);\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        await dispatch(setUser(user));\r\n        history.push(\"/\");\r\n      } else {\r\n        history.push(\"/login\");\r\n        dispatch(clearUser());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <MainPage />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <LoginPage />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <RegisterPage />\r\n        </Route>\r\n        <Route path=\"/chat/:friendUid\">\r\n          <ChatPage />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport Reducer from \"./redux/reducer/root_reducer\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider\r\n      store={createStoreWithMiddleware(\r\n        Reducer,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      )}\r\n    >\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}